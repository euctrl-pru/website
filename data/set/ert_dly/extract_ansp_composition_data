#!/usr/bin/env bash

#-- Version: 1.0
#-- Author: Enrico Spinielli
#-- Date: 2015/03/06
#-- Copyright (C) 2015 Eurocontrol/PRU


##- Usage: extract_airport_atfm_delay_data
##- Extract Airport Arrival ATFM Delay data to csv file, 'apt_dly.json' (this extension is a hack).
##-
##- Assumptions:
##-   DBUSR                   environment variable for the relevant schema username.
##-   DBPWD                   environment variable for the relevant schema password.
##-   DBNAME                  environment variable for the relevant schema name.
##-
##- ToDo:
##-  * allow for an optional argument for the name of the file where to save to.
##-  * pass FROM and TO for the dates range of the data to be extracted.
##-
##- Options:
##-   -h, --help              Print a usage message summarizing the command-line options, then exit.
##-   -V, --version           Output version information and exit.
##-
##- Examples:
##- $ extract_airport_atfm_delay_data
##-
##- Caveat: be sure to use gnu-getopt and not OSX builtin or Git Bash missing one ;-)

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SCRIPT=$(basename "${BASH_SOURCE[0]}")
OUTPUT_FILENAME=ansp_composition.csv


# this is _the_ trick
help=$(grep "^##-" "${SCRIPT_DIR}/${SCRIPT}" | cut -c 4-)
version=$(grep "^#--"  "${SCRIPT_DIR}/${SCRIPT}" | cut -c 4-)
opt_h() {
    echo "$help"
}

opt_v() {
    echo "$version"
}



# Execute getopt
TEMP=$(getopt -o :hV --long "help,version" -n "$SCRIPT" -- "$@");

if [ $? != 0 ]
then
    echo "Invalid option(s): $*" >&2
    exit 1
fi

eval set -- "$TEMP"
unset TEMP

while true; do
    case $1 in
        -h|--help)
            opt_h
            exit
            ;;
        -V|--version)
            opt_v
            exit
            ;;
        --)
            shift
            break
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            opt_h
            exit 1
            ;;
        *)
            echo "Internal error!"
            exit 1
            ;;
    esac
done

# there are NO mandatory arguments
if (( $# != 0 )); then
    echo "Error: illegal number of parameters"
    opt_h
    exit 1
fi


sql -S "$DBUSR"/"$DBPWD"@"$DBNAME" @ansp_composition_csv.sql $OUTPUT_FILENAME

# remove blank lines in place
sed -i -E 's/^ +//; s/ +$//; /^$/d' $OUTPUT_FILENAME

#!/usr/bin/env bash

#-- Version: 1.0
#-- Author: Enrico Spinielli
#-- Date: 2016/01/26
#-- Copyright (C) 2015 Eurocontrol/PRU


##- Usage: extract_en-route_traffic_fab_fir_data <WEF> <TIL>
##- Extract Rn-route Traffic FAB FIR data to csv file, 'En-Route_Traffic_FAB_FIR.csv'
##- from the period [WEF, TIL).
##- NOTE: <TIL> is not included
##-
##- Assumptions:
##-   DBUSR                   environment variable for the relevant schema username.
##-   DBPWD                   environment variable for the relevant schema password.
##-   DBNAME                  environment variable for the relevant schema name.
##-
##- ToDo:
##-  * allow for an optional argument for the name of the file where to save to.
##-  * pass FROM and TO for the dates range of the data to be extracted.
##-
##- Options:
##-   -h, --help              Print a usage message summarizing the command-line options, then exit.
##-   -V, --version           Output version information and exit.
##-
##- Examples:
##- $ extract_en-route_traffic_fab_fir_data '01-JAN-2015' '31-MAR-2016'
##-
##- Caveat: be sure to use gnu-getopt and not OSX builtin or Git Bash missing one ;-)

SCRIPT=$(basename ${BASH_SOURCE[0]})
OUTPUT_FILENAME='En-Route_Traffic_FAB_FIR.csv'

help=$(grep "^##-" "${SCRIPT}" | cut -c 4-)
version=$(grep "^#--"  "${SCRIPT}" | cut -c 4-)
opt_h() {
  echo "$help"
}

opt_v() {
  echo "$version"
}



# Execute getopt
TEMP=$(getopt -o :hV --long ",help,version" -n "$SCRIPT" -- "$@");
eval set -- "$TEMP"

while true; do
   case $1 in
   -h|--help)
       opt_h
       exit
       ;;
   -V|--version)
      opt_v
      exit
      ;;
   --)
      shift
      break
      ;;
   \?)
      echo "Invalid option: -$OPTARG" >&2
      opt_h
      exit 1
      ;;
   *)
      echo "Internal error!"
      exit 1
      ;;
   esac
done

# there are 2 mandatory arguments
if (( $# != 2 )); then
   echo "Error: illegal number of parameters"
   opt_h
   exit 1
else
    WEF=$1
    TIL=$2
fi

sql -S $DBUSR/$DBPWD@$DBNAME @en-route_traffic_fab_fir_csv.sql $OUTPUT_FILENAME $WEF $TIL

# # remove blank lines in place
# sed -i -E 's/^ +//; s/ +$//; /^$/d' $OUTPUT_FILENAME

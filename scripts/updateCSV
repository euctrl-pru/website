#!/usr/bin/env bash
#
#-- Version: 1.0
#-- Author: Enrico Spinielli
#-- Date: 2016/04/18
#-- Copyright (C) 2016 Eurocontrol/PRU


##- Usage: updateCSV
##- Extract all PRU download point CSV files
##-
##- This script relies on the following ENV variables
##-   HFEDBUSR        env var for the HFE dataset's schema user.
##-   HFEDBPWD        env var for the HFE dataset's schema password.
##-   YYYDBUSR        env var for the other's datasets schema username.
##-   YYYDBPWD        env var for the other's datasets schema password.
##-   DBNAME          env var for the relevant schema name.

##- Options:
##-   -h, --help      Print a usage message summarizing the command-line options, then exit.
##-   -V, --version   Output version information and exit.
##-
##- Examples:
##- $ updateCSV
##-
##- Caveat: be sure to use gnu-getopt and not OSX builtin or Git Bash missing one ;-)


SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SCRIPT="$(basename "${BASH_SOURCE[0]}")"

help=$(grep "^##-" "${SCRIPT_DIR}/${SCRIPT}" | cut -c 4-)
version=$(grep "^#--"  "${SCRIPT_DIR}/${SCRIPT}" | cut -c 4-)

opt_h() {
    echo "$help"
}

opt_v() {
    echo "$version"
}


# Execute getopt
TEMP=$(getopt -o :hV --long "help,version" -n "${SCRIPT}" -- "$@");

if [ $? != 0 ]
then
    echo "Invalid option(s): $*" >&2
    exit 1
fi

eval set -- "$TEMP"
unset TEMP

while true; do
    case $1 in
        -h|--help)
            opt_h
            exit
            ;;
        -V|--version)
            opt_v
            exit
            ;;
        --)
            shift
            break
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            opt_h
            exit 1
            ;;
        *)
            echo "Internal error!"
            exit 1
            ;;
    esac
done

# there are NO mandatory arguments
if (( $# != 0 )); then
    echo "Error: illegal number of parameters"
    opt_h
    exit 1
fi

APT_DLY_WEF=2014-01-01
ERT_DLY_WEF=2017-01-01
TIL=2018-08-01

(
    cd "${SCRIPT_DIR}/../" || exit;
    Rscript R/export_ert_dly.R -t ansp ${ERT_DLY_WEF} ${TIL};
    Rscript R/export_ert_dly.R -t fir ${ERT_DLY_WEF} ${TIL};
    Rscript R/export_apt_dly.R ${APT_DLY_WEF} ${TIL};
    Rscript R/export_hfe.R;

    Rscript R/generate_ert_flt_percent_chage.R ${TIL};
    Rscript R/generate_monthly_ert_dly_fab_fir.R;

    Rscript R/export_ansp_composition.R ${TIL};
)
